<?php
/**
 * Created by PhpKiller.
 * User: Across The Pacific
 * Date: 2016/12/29
 * Time: 15:33
 */
namespace app\admin\controller;
use app\common\model\Shop;
use app\common\model\AdminUsers;

use com\Geetestlib;
use org\Verify;
use think\Db;

class Admin extends Base{
    protected $verify;
    protected $Gtsdk;
	
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
		$this->shop = new Shop();
		$this->admin_users = new AdminUsers();
        $this->verify = new Verify();
        $this->Gtsdk = new Geetestlib(config('gee_id'), config('gee_key'));
    }

    /*
     * 后台登录页面
     * */
    public function login()
    {
        (session('admin_user_id') > 0) &&  $this->redirect(url('/admin/Index/index'));
        if(request()->isPost()){
            $user_name = input("param.username");
            $password = input("param.password");
            $result = $this->validate(compact('user_name','password'),[['user_name','require','用户名不能为空'],['password','require','密码不能为空']]);
            if(true !== $result)//表单验证
                return json(['code'=>-3,'data'=>'','msg'=>$result]);

            if(config('verify_type') == 1){//如果为普通验证码
                $code= input('param.code');
                if(!$code)
                    return json(['code'=>-2,'data'=>'','msg'=>'请输入验证码']);
				if(!$this->verify->check($code))
				{
                    return json(['code'=>-1,'data'=>'','msg'=>'验证码错误']);
                }
            }
			else{//极验证码
                $user_id = session('user_id');
                if (session('gtserver') == 1) {
                    $result = $this->Gtsdk->success_validate(input('param.geetest_challenge'), input('param.geetest_validate'), input('param.geetest_seccode'), $user_id);
                    //极验服务器状态正常的二次验证接口
                    if (!$result) {
                        $this->error('请先拖动验证码到相应位置');
                    }
                }else{
                    if (!$this->Gtsdk->fail_validate(input('param.geetest_challenge'), input('param.geetest_validate'), input('param.geetest_seccode'))) {
                        //极验服务器状态宕机的二次验证接口
                        $this->error('请先拖动验证码到相应位置');
                    }
                }
			}
			if(!strpos($user_name,'@')){
				$shop_info = $this->shop->getColumn(['username'=>$user_name,'password'=>encrypt($password)],'*',1);
				if($shop_info){
					if($shop_info['status'] !=1){
						$this->error('账户被禁用');
					}
					session('admin_user_id',1);
					session('admin_shop_id',$shop_info['id']);
					$this->shop->where('id',$shop_info['id'])->update(['update_at'=>date('Y-m-d H:i:s',time())]);
					return json(['code'=>1,'data'=>'/admin/Index/index','msg'=>'登录成功']);
				}
				else{
					$this->error('用户名或密码错误1');
				}
			}
			else
			{
				$users=explode('@',$user_name,2);
				$username=$users[0];
				$shopid=$users[1];
				
				$user_info = $this->admin_users->getColumn(['username'=>$username,'password'=>encrypt($password),'status'=>0],'*',1);
				if($user_info){
					$result = $this->admin_shop->getColumn(['admin_id'=>$user_info['id'],
											'shop_id'=>$shopid,
											],'*',1);
					if($result){
						session('admin_user_id',$user_info['id']);
						session('admin_shop_id',$shopid);
						return json(['code'=>1,'data'=>'/admin/Index/index','msg'=>'登录成功']);
					}
					else{
						$this->error('门店标记错误');
					}
				}
				else{
					$this->error('用户名或密码错误2');
				}
			}
        }
        return view('admin/login');
    }
    //验证码
    public function checkVerify()
    {
        $this->verify->imageH = 32;
        $this->verify->imageW = 100;
        $this->verify->codeSet = '0123456789';
        $this->verify->length = 4;
        $this->verify->useNoise = false;
        $this->verify->fontSize = 14;
        return $this->verify->entry();
    }
    //极验验证
    public function getVerify(){
        $user_id = "web";
        $status = $this->Gtsdk->pre_process($user_id);
        session('gtserver',$status);
        session('user_id',$user_id);
        echo $this->Gtsdk->get_response_str();
    }
    //退出登录
    public function loginOut()
    {
        session(null);
        $this->redirect(url('index'));
    }
	
	/*添加|修改管理员*/
    public function userHandle()
    {
        $id = session('admin_user_id');
        if(request()->isPost()){
            $dt = input("param.");
            if($id >0){//修改
				if($id==1){
					$data['username'] = trimall($dt['username']);
					if(!empty(trimall($dt['password']))){
						$data['password'] = encrypt(trimall($dt['password']));
					}
					$data['author'] = trimall($dt['realname']);
					$data['telephone'] = trimall($dt['telephone']);
					$rs = $this->shop->ShopHandle($data,$id);
				}
				else{
					$rs = $this->admin_users->handle($dt,$id);
				}	
            }
            $rs['code'] ==1 ? $this->redirect(url('Admin/loginOut')):$this->error($rs['msg']);
        }
		if($id==1){
			$info = $this->shop->getColumn(['id'=>$id],'username,author,telephone',1);
			$info['realname']=$info['author'];
			unset($info['author']);
		}
		else{
			$info = $this->admin_users->getColumn(['id'=>$id],'username,realname,telephone',1);
		}
        return view('admin/_user',[
            'info'=>$info,
			'id'=>$id,
        ]);
    }
    /*修改排序公共方法*/
    public function updateSort()
    {
        $id = input('param.id');
        $table = input('param.table');
        $column = input('param.column');
        $value = input('param.value');
        if($table == 'goods' && $column=='store_count'){
            $spec_num = Db::name('goods_spec_price')->where(['goods_id'=>$id])->sum('store_num');
            if($spec_num > $value){
                $this->error('库存数量不能低于规格库存的总数');
            }
        }
        $rs = Db::name($table)->where(['id'=>$id])->update([$column=>$value]);
        if($table == 'admin_config'){//配置文件更新，刷新缓存
            cache('system_config_data',null);
        }
        $rs && $this->success();

    }
    /*系统管理员*/
    public function adminUser()
    {
        return view('admin/user_list',[
            'lists'=>$this->adminUser->getAllUser(1),
        ]);
    }
    /*是否禁用权限菜单开关*/
    public function powerSwitch()
    {
        $res = $this->adminUser->save(['is_del'=>input('param.val')],['id'=>input('param.id')]);
        (input('param.val')==0)? $this->success('已启用'):$this->error('已冻结');
    }
    
    /*删除管理员*/
    public function delUser()
    {
        return $this->adminUser->delUser(input('post.ids/a'));
    }
    /*系统日志*/
    public function adminLog()
    {
        return view('admin/log_list');
    }
    /*系统日志*/
    public function ajaxLogList()
    {
        $list= Db::name('admin_log')->cache(true)->alias('m')->field('m.*,u.user_name')->join('pc_admin_user u','m.admin_user_id = u.id')->order(['created_at'=>'desc'])->paginate($this->page,false,[
            'page'=>input('param.page'),
            'list_rows'=>1]);
        $page = $list->render();
        $ajax_page=preg_replace("(<a[^>]*page[=|/](\d+).+?>(.+?)<\/a>)","<a data-p=$1 href='javascript:void($1);'>$2</a>",$page);
        return view('admin/ajax_log_list',[
            'lists' => $list,
            'page'=>$ajax_page
        ]);
    }
}